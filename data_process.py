import pandas as pd
import re
from geopy.geocoders import Nominatim
import time


def cities_process(city):
    if not isinstance(city, str):
        return pd.NaT  # или city, если хочешь оставить значение


    city = city.lower().strip()

    cities = {'МО': 'Московская область',
              'Новочеркасск, Ростовская обл.': 'Новочеркасск',
              'Аксайск': 'Аксай',
              'Алтай': 'Алтайский край',
              'Амурская обл': 'Амурская область',
              'Артем': 'Артём',
              'Арханг.обл': 'Архангельская область',
              'Астраханская обл': 'Астраханская область',
              'Астахань': 'Астрахань',
              'Башкирия': 'Республика Башкортостан',
              'Башкортостан': 'Республика Башкортостан',
              'Братск (Иркутск)': 'Братск',
              'В.Луки': 'Великие Луки',
              'В.Новгород': 'Великий Новгород',
              'вел нов.': 'Великий Новгород',
              'Владик': 'Владивосток',
              'Владимир обл': 'Владимирская область',
              'Выкса, Нижний': 'Выкса',
              'Джержинский': 'Дзержинский',
              'Дзнржинск': 'Дзержинск',
              'Димитров': 'Дмитров',
              'екат': 'Екатеринбург',
              'Екатерианбург': 'Екатеринбург',
              'ЕКБ': 'Екатеринбург',
              'Йоршкар-Ола': 'Йошкар-Ола',
              'Кабицино': 'Кабицыно',
              'Каменск шахтинск': 'Каменск-Шахтинский',
              'Каменск Шахтинский': 'Каменск-Шахтинский',
              'Комсомольск на Амуре': 'Комсомольск-на-Амуре',
              'Котдас': 'Котлас',
              'Крастоярск': 'Красноярск',
              'Лен обл': 'Ленинградская область',
              'Лен.обл': 'Ленинградская область',
              'Магнитогорс': 'Магнитогорск',
              'Махачкала аэродром': 'Махачкала',
              'МО Руза': 'Московская область',
              'МО, Химки': 'Московская область',
              'Москвва': 'Москва',
              'мс': 'Москва',
              'мск': 'Москва',
              'Н. Тагил': 'Нижний Тагил',
              'Н. Челны': 'Набережные Челны',
              'Н.Новгорд': 'Нижний Новгорд',
              'Н.Новгород': 'Нижний Новгорд',
              'Н.Тагил': 'Нижний Тагил',
              'Н.Фоминск': 'Наро-Фоминск',
              'Н.Челны': 'Набережные Челны',
              'Наб. Челны': 'Набережные Челны',
              'Наб.Челны': 'Набережные Челны',
              'Наро Фоминск': 'Наро-Фоминск',
              'Невинномысск': 'Невиномысск',
              'Нижний': 'Нижний Новгорд',
              'Нижний нов': 'Нижний Новгорд',
              'Нижний новгород': 'Нижний Новгорд',
              'НН': 'Нижний Новгорд',
              'Новорос': 'Новороссийск',
              'новороссийск': 'Новороссийск',
              'Новосиб': 'Новосибирск',
              'Новоссибирск': 'Новосибирск',
              'Н-Челны': 'Набережные Челны',
              'Орел': 'Орёл',
              'Орехово Зуево': 'Орехово-Зуево',
              'П.Посад': 'Павлов Пасад',
              'Павлов.Пасад': 'Павлов Пасад',
              'Пермь, Березняки': 'Березняки',
              'Петр.-Камчатск.': 'Петропавловск-Камчатский',
              'Петропавловск-Камч': 'Петропавловск-Камчатский',
              'П-К': 'Петропавловск-Камчатский',
              'Псеов': 'Псков',
              'Реутов МО': 'Реутов',
              'Р-на-Д': 'Ростов-на-Дону',
              'РнД': 'Ростов-на-Дону',
              'Роств н/д': 'Ростов-на-Дону',
              'Ростов': 'Ростов-на-Дону',
              'Ростов н/д': 'Ростов-на-Дону',
              'Ростов на дону': 'Ростов-на-Дону',
              'Ростов-на-До': 'Ростов-на-Дону',
              'С Посад': 'Сергиев Посад',
              'Сарат': 'Саратов',
              'Сарат.обл.': 'Саратовская область',
              'Семферополь': 'Симферополь',
              'Сергиев-Посад': 'Сергиев Посад',
              'Симферопль': 'Симферополь',
              'С-П': 'Санкт-Петербург',
              'спб': 'Санкт-Петербург',
              'С-Посад': 'Сергиев Посад',
              'Ставрапольский край': 'Ставропольский край',
              'Старица, Твер обл': 'Старица',
              'Тамбрв': 'Тамбов',
              'Тульская обл,гСуворов': 'Суворов',
              'Усть Луг': 'Усть-Луга',
              'Ханты-Манс': 'Ханты-Мансийск',
              'Челяба': 'Челябинск',
              'Чечня, Грозный': 'Грозный',
              'Чечня': 'Грозный',
              'Щелково': 'Щёлково',
              'Южно - Сахалинск': 'Южно-Сахалинск',
              'Южно Сахалинск': 'Южно-Сахалинск',
              'ЮжСахалинск': 'Южно-Сахалинск',
              'Якутия': 'Якутск',
              'Яроссславль': 'ярославль',
              'Нижний новг': 'Нижний новгорд',
              'Новоросийск': 'Новоросcийск',
              'Эсто-садок, сочи': 'Эсто-садок',
              'Эстосадок': 'Эсто-садок',
              'Питер': 'Санкт-Петербург'
        }

    to_delete = list(map(lambda x: x.lower().strip(), [
        '2762доставка', '30.11 -1забор(13т.шт)', '45шт доставили',
        '8208', '9,5м3', 'VJ'
    ]))

    # нормализуем ключи словаря
    normalized_cities = {k.lower().strip(): v for k, v in cities.items()}

    if city in to_delete:
        return pd.NaT
    return normalized_cities.get(city, city).capitalize()

def get_region(city):
    pass